<?php
//File Name:ProjectData.php
//This is is generated by dic2db. Don't modify it!

namespace Prj\Data;

class ProjectData extends \Sooh\DB\Base\KVObj
{

	public static function add(
			  $name
			, $startDate
			, $endDate
			, $intro
			, $userlist
			, $managerlist
		)
	{
		$datetime = new \DateTime;
		$curDateTime = $datetime->format('Y-m-d H:i:s');
		$data = [
			  'name' => $name
			, 'startDate' => $startDate
			, 'endDate' => $endDate
			, 'intro' => $intro
			, 'userlist' => '__begin_flag__,' . implode( ',', $userlist ) . ',__end_flag__'
			, 'managerlist' => '__begin_flag__,' . implode( ',', $managerlist ) . ',__end_flag__'
			, 'iRecordVerID' => '1'
			, 'create_time' => $curDateTime
			, 'update_time' => $curDateTime
			, 'del' => 0
			];
		$model = self::getCopy('');
		$model->db()->addRecord( $model->tbname(), $data );
	}

	public static function upd(
			  $id
			, $name
			, $startDate
			, $endDate
			, $intro
			, $userlist
			, $managerlist
		)
	{
		$data = [
			  'name' => $name
			, 'startDate' => $startDate
			, 'endDate' => $endDate
			, 'intro' => $intro
			, 'userlist' => '__begin_flag__,' . implode( ',', $userlist ) . ',__end_flag__'
			, 'managerlist' => '__begin_flag__,' . implode( ',', $managerlist ) . ',__end_flag__'
			];
		$model = self::getCopy( ['id' => $id] );
		$model->load();
		if ( $model->exists() )
		{
			foreach( $data as $k => $v )
			{
				$model->setField( $k, $v );
			}
			$datetime = new \DateTime;
			$curDateTime = $datetime->format('Y-m-d H:i:s');
			$model->setField('update_time', $curDateTime);
			$model->update();
		}
		else
		{
			return false;
		}
	}

	public static function get( $id )
	{
		$model = self::getCopy('');
		$rs = $model->db()->getRecord( $model->tbname(), '*', ['del'=>0, 'id'=>$id] );
		$rs['userlist'] = explode( ',', $rs['userlist'] );
		array_pop( $rs['userlist'] );
		array_shift( $rs['userlist'] );
		$rs['managerlist'] = explode( ',', $rs['managerlist'] );
		array_pop( $rs['managerlist'] );
		array_shift( $rs['managerlist'] );
		return $rs;
	}

	public static function getAll()
	{
		$model = self::getCopy('');
		$data = $model->db()->getRecords( $model->tbname(), '*', ['del'=>0] );
		$tmp = [];
		foreach( $data as $rs )
		{
			$rs['userlist'] = explode( ',', $rs['userlist'] );
			array_pop( $rs['userlist'] );
			array_shift( $rs['userlist'] );
			$rs['managerlist'] = explode( ',', $rs['managerlist'] );
			array_pop( $rs['managerlist'] );
			array_shift( $rs['managerlist'] );
			$tmp[] = $rs;
		}
		return $tmp;
	}

	public static function del( $id )
	{
		$model = self::getCopy(['id' => $id]);
		$model->load();
		if ( $model->exists() )
		{
			$model->setField( 'del', 1 );
			$datetime = new \DateTime;
			$curDateTime = $datetime->format('Y-m-d H:i:s');
			$model->setField('update_time', $curDateTime);
			$model->update();
			return true;
		}
		else
		{
			return false;
		}
	}

	public static function getCount()
	{
		$model = self::getCopy('');
		$sql = <<<sql
select count(*) as count from tb_project
sql;
		var_log( $sql, 'execute sql' );
     $rs = $model->db()->fetchAssocThenFree($model->db()->execCustom(['sql'=>$sql]));
		return (int)$rs[0]['count'];
	}

	public static function setProjectName(
			  $name
			, $id_big_two_one
			, $id_small_two_one
			, $startDate_small_one
			, $startDate_big_one
		)
	{
		$model = self::getCopy('');
		$datetime = new \DateTime;
		$curDateTime = $datetime->format('Y-m-d H:i:s');
		$sql = <<<sql
update tb_project set 
 update_time = $curDateTime
, name = '$name'
where
 (
	(
		( id > $id_big_two_one )
	 or 
		( id < $id_small_two_one )
	)
 and 
	( startDate > '$startDate_small_one' )
 and 
	( startDate < '$startDate_big_one' )
)

sql;
		var_log( $sql, 'execute sql' );
		return $model->db()->fetchAssocThenFree($model->db()->execCustom(['sql'=>$sql]));
	}
	public static function getSomeCount(
			  $id_cond
		)
	{
		$model = self::getCopy('');
		$sql = <<<sql
select 
	  count(*) as count
from tb_project
where
 ( id = $id_cond )

sql;
		var_log( $sql, 'execute sql' );
		return $model->db()->fetchAssocThenFree($model->db()->execCustom(['sql'=>$sql]));
	}
	protected static function splitedTbName($n,$isCache)
	{
		return 'tb_project';
	}
}
